version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mysql:
    driver: local

services:
  # 创建Nginx容器
  nginx:
    #build: ./
    image: nginx:1.17.4
    container_name: nginx.1.17.4
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - D:\WWW:/usr/share/nginx/html
      - D:\WWW\Nginx\conf.d:/etc/nginx/conf.d
    #default.conf
    #    server {
    #    listen       80;
    #    server_name  localhost;
    #
    #    #charset koi8-r;
    #    #access_log  /var/log/nginx/host.access.log  main;
    #
    #    location / {
    #    root   /usr/share/nginx/html;
    #    index  index.html index.htm;
    #}
    #
    #  #error_page  404              /404.html;
    #
    #  # redirect server error pages to the static page /50x.html
    #  #
    #  error_page   500 502 503 504  /50x.html;
    #  location = /50x.html {
    #  root   /usr/share/nginx/html;
    #}
    #
    #  # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #  #
    #  #location ~ \.php$ {
    #  #    proxy_pass   http://127.0.0.1;
    #  #}
    #
    #  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #  #
    #    location ~ \.php$ {
    #    root           /usr/share/nginx/html;
    #    fastcgi_pass   php-fpm:9000;
    #    #fastcgi_pass   172.17.0.5:9000;
    #    fastcgi_index  index.php;
    #    #fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;#该配置不通过
    #    #fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html/$fastcgi_script_name;#配置不通过
    #    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #    include        fastcgi_params;
    #    }
    #
    #  # deny access to .htaccess files, if Apache's document root
    #  # concurs with nginx's one
    #  #
    #  #location ~ /\.ht {
    #  #    deny  all;
    #  #}
    #}
    stdin_open: true
    tty: true
    privileged: true
    restart: always
    links:
      - "php-fpm"
      - "php-fpm-7.2"
    depends_on:
      - php-fpm
      - php-fpm-7.2
    networks:
      - frontend
      - backend
    #entrypoint: ["bash"]

  # 创建 mysql 容器
  mysql:
    #build: ./
    container_name: mysql.5.7.27
    image: mysql:5.7.27
    ports:
      - "3307:3306"
    stdin_open: true
    tty: true
    privileged: true
    restart: always
    #    network_mode: "host"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      #MYSQL_DATABASE: 'user'
      #MYSQL_USER: 'admin'
      #MYSQL_PASSWORD: '123456'
    volumes:
      - D:\WWW\MySQL\data:/var/lib/mysql
      - D:\WWW\MySQL\conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - backend
    #entrypoint: ["bash"]

  mysql_5.6:
    #build: ./
    container_name: mysql.5.6
    image: mysql:5.6
    ports:
      - "3306:3306"
    stdin_open: true
    tty: true
    privileged: true
    restart: always
    #    network_mode: "host"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      #MYSQL_DATABASE: 'user'
      #MYSQL_USER: 'admin'
      #MYSQL_PASSWORD: '123456'
    volumes:
      - D:\WWW\MySQL\data5.6:/var/lib/mysql
      - D:\WWW\MySQL\conf5.6/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
      - D:\WWW\MySQL\conf5.6/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - D:\WWW\MySQL\log5.6/error.log:/var/log/mysql/error.log
      #[mysqld]
      # bind-address = 0.0.0.0 # 表示允许任意ip地址访问
      # explicit_defaults_for_timestamp=true
      #pid-file        = /var/run/mysqld/mysqld.pid
      #socket          = /var/run/mysqld/mysqld.sock
      #datadir         = /var/lib/mysql
      #log-error      = /var/log/mysql/error.log
      ## Disabling symbolic-links is recommended to prevent assorted security risks
      #symbolic-links=0
    networks:
      - backend
    #entrypoint: ["bash"]

  # 创建 php 容器
  php-fpm:
    #安装扩展则需要用 Dockerfile 定制php
    #build:
    #  context: ../
    #  dockerfile: Dockerfile/php
    container_name: php.7.3-swoole.4.4.7
    image: 16675112194/swoole:4.4.7
    working_dir: /usr/share/nginx/html
    ports:
      - "9000:9000"
      - "9500:9500"
      - "9501:9501"
      - "3366:3366"
    volumes:
      #- D:\WWW:/var/www/html
      - D:\WWW:/usr/share/nginx/html
    stdin_open: true
    tty: true
    privileged: true
    restart: always
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - mysql
      - mysql_5.6
    links:
      - "mysql"
      - "mysql_5.6"
    networks:
      - backend
    entrypoint: ["php-fpm"]

  php-fpm-7.2:
    #安装扩展则需要用 Dockerfile 定制php
    #build:
    #  context: ../
    #  dockerfile: Dockerfile/php_7_2
    container_name: php.7.2
    image: php:7.2-fpm
    working_dir: /usr/share/nginx/html
    ports:
      - "9001:9000"
    volumes:
      #- D:\WWW:/var/www/html
      - D:\WWW:/usr/share/nginx/html
    stdin_open: true
    tty: true
    privileged: true
    restart: always
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - mysql
      - mysql_5.6
    links:
      - "mysql"
      - "mysql_5.6"
    networks:
      - backend
    #entrypoint: ["bash"]

#      #netstat -a -o -n | Select-String -Pattern 2375
#      #netstat -an | findstr 2375
#      #netsh interface ipv4 show excludedportrange protocol=tcp
#      #docker 连接(桥接模式)本地主机需用本地主机ip连接
